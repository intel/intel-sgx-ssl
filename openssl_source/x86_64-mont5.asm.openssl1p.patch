2097a2098,2290
> global	bn_from_montgomery
> 
> ALIGN	32
> bn_from_montgomery:
> 
> 	test	DWORD[48+rsp],7
> 	jz	NEAR bn_from_mont8x
> 	xor	eax,eax
> 	ret ; DB	0F3h,0C3h		;repret
> 
> 
> 
> 
> ALIGN	32
> bn_from_mont8x:
> 	mov	QWORD[8+rsp],rdi	;WIN64 prologue
> 	mov	QWORD[16+rsp],rsi
> 	mov	rax,rsp
> $L$SEH_begin_bn_from_mont8x:
> 	mov	rdi,rcx
> 	mov	rsi,rdx
> 	mov	rdx,r8
> 	mov	rcx,r9
> 	mov	r8,QWORD[40+rsp]
> 	mov	r9,QWORD[48+rsp]
> 
> 
> 
> DB	0x67
> 	mov	rax,rsp
> 
> 	push	rbx
> 
> 	push	rbp
> 
> 	push	r12
> 
> 	push	r13
> 
> 	push	r14
> 
> 	push	r15
> 
> $L$from_prologue:
> 
> 	shl	r9d,3
> 	lea	r10,[r9*2+r9]
> 	neg	r9
> 	mov	r8,QWORD[r8]
> 
> 
> 
> 
> 
> 
> 
> 
> 	lea	r11,[((-320))+r9*2+rsp]
> 	mov	rbp,rsp
> 	sub	r11,rdi
> 	and	r11,4095
> 	cmp	r10,r11
> 	jb	NEAR $L$from_sp_alt
> 	sub	rbp,r11
> 	lea	rbp,[((-320))+r9*2+rbp]
> 	jmp	NEAR $L$from_sp_done
> 
> ALIGN	32
> $L$from_sp_alt:
> 	lea	r10,[((4096-320))+r9*2]
> 	lea	rbp,[((-320))+r9*2+rbp]
> 	sub	r11,r10
> 	mov	r10,0
> 	cmovc	r11,r10
> 	sub	rbp,r11
> $L$from_sp_done:
> 	and	rbp,-64
> 	mov	r11,rsp
> 	sub	r11,rbp
> 	and	r11,-4096
> 	lea	rsp,[rbp*1+r11]
> 	mov	r10,QWORD[rsp]
> 	cmp	rsp,rbp
> 	ja	NEAR $L$from_page_walk
> 	jmp	NEAR $L$from_page_walk_done
> 
> $L$from_page_walk:
> 	lea	rsp,[((-4096))+rsp]
> 	mov	r10,QWORD[rsp]
> 	cmp	rsp,rbp
> 	ja	NEAR $L$from_page_walk
> $L$from_page_walk_done:
> 
> 	mov	r10,r9
> 	neg	r9
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 	mov	QWORD[32+rsp],r8
> 	mov	QWORD[40+rsp],rax
> 
> $L$from_body:
> 	mov	r11,r9
> 	lea	rax,[48+rsp]
> 	pxor	xmm0,xmm0
> 	jmp	NEAR $L$mul_by_1
> 
> ALIGN	32
> $L$mul_by_1:
> 	movdqu	xmm1,XMMWORD[rsi]
> 	movdqu	xmm2,XMMWORD[16+rsi]
> 	movdqu	xmm3,XMMWORD[32+rsi]
> 	movdqa	XMMWORD[r9*1+rax],xmm0
> 	movdqu	xmm4,XMMWORD[48+rsi]
> 	movdqa	XMMWORD[16+r9*1+rax],xmm0
> DB	0x48,0x8d,0xb6,0x40,0x00,0x00,0x00
> 	movdqa	XMMWORD[rax],xmm1
> 	movdqa	XMMWORD[32+r9*1+rax],xmm0
> 	movdqa	XMMWORD[16+rax],xmm2
> 	movdqa	XMMWORD[48+r9*1+rax],xmm0
> 	movdqa	XMMWORD[32+rax],xmm3
> 	movdqa	XMMWORD[48+rax],xmm4
> 	lea	rax,[64+rax]
> 	sub	r11,64
> 	jnz	NEAR $L$mul_by_1
> 
> DB	102,72,15,110,207
> DB	102,72,15,110,209
> DB	0x67
> 	mov	rbp,rcx
> DB	102,73,15,110,218
> 	mov	r11d,DWORD[((OPENSSL_ia32cap_P+8))]
> 	and	r11d,0x80108
> 	cmp	r11d,0x80108
> 	jne	NEAR $L$from_mont_nox
> 
> 	lea	rdi,[r9*1+rax]
> 	call	__bn_sqrx8x_reduction
> 	call	__bn_postx4x_internal
> 
> 	pxor	xmm0,xmm0
> 	lea	rax,[48+rsp]
> 	jmp	NEAR $L$from_mont_zero
> 
> ALIGN	32
> $L$from_mont_nox:
> 	call	__bn_sqr8x_reduction
> 	call	__bn_post4x_internal
> 
> 	pxor	xmm0,xmm0
> 	lea	rax,[48+rsp]
> 	jmp	NEAR $L$from_mont_zero
> 
> ALIGN	32
> $L$from_mont_zero:
> 	mov	rsi,QWORD[40+rsp]
> 
> 	movdqa	XMMWORD[rax],xmm0
> 	movdqa	XMMWORD[16+rax],xmm0
> 	movdqa	XMMWORD[32+rax],xmm0
> 	movdqa	XMMWORD[48+rax],xmm0
> 	lea	rax,[64+rax]
> 	sub	r9,32
> 	jnz	NEAR $L$from_mont_zero
> 
> 	mov	rax,1
> 	mov	r15,QWORD[((-48))+rsi]
> 
> 	mov	r14,QWORD[((-40))+rsi]
> 
> 	mov	r13,QWORD[((-32))+rsi]
> 
> 	mov	r12,QWORD[((-24))+rsi]
> 
> 	mov	rbp,QWORD[((-16))+rsi]
> 
> 	mov	rbx,QWORD[((-8))+rsi]
> 
> 	lea	rsp,[rsi]
> 
> $L$from_epilogue:
> 	mov	rdi,QWORD[8+rsp]	;WIN64 epilogue
> 	mov	rsi,QWORD[16+rsp]
> 	ret ; DB	0F3h,0C3h		;repret
> 
> $L$SEH_end_bn_from_mont8x:
3799a3993,3996
> 
> 	DD	$L$SEH_begin_bn_from_mont8x wrt ..imagebase
> 	DD	$L$SEH_end_bn_from_mont8x wrt ..imagebase
> 	DD	$L$SEH_info_bn_from_mont8x wrt ..imagebase
3826a4024,4028
> ALIGN	8
> $L$SEH_info_bn_from_mont8x:
> DB	9,0,0,0
> 	DD	mul_handler wrt ..imagebase
> 	DD	$L$from_prologue wrt ..imagebase,$L$from_body wrt ..imagebase,$L$from_epilogue wrt ..imagebase
